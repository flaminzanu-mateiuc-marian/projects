/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.io.*;
import java.sql.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marian
 */
public class Meniu_Vizualizare extends javax.swing.JFrame {

    public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }

    /**
     * Creates new form Meniu_Vizualizare
     */
    public Meniu_Vizualizare() {
        initComponents();
                setDefaultCloseOperation(HIDE_ON_CLOSE);

        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);

        jComboBox1.setVisible(false);
        jComboBox2.setVisible(false);
        jComboBox3.setVisible(false);
        jComboBox4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        labelTabela = new javax.swing.JLabel();
        comboTabela = new javax.swing.JComboBox<>();
        btnSelecteaza = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnFiltreaza = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        labelTabela.setText("Selectati tabela:");

        comboTabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Statie", "Depou", "Angajat", "Material Rulant", "Garnitura", "Ruta" }));
        comboTabela.setSelectedItem(comboTabela);
        comboTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTabelaActionPerformed(evt);
            }
        });

        btnSelecteaza.setText("Selecteaza");
        btnSelecteaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecteazaActionPerformed(evt);
            }
        });

        jLabel1.setText("Nume Regionala:");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btnFiltreaza.setText("Filtreaza");
        btnFiltreaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltreazaActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel3.setText("jLabel3");

        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(labelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(btnSelecteaza, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnFiltreaza, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(labelTabela)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelecteaza, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(btnFiltreaza, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecteazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecteazaActionPerformed
        try {

            String query = "";
            int valoare = comboTabela.getSelectedIndex();
            switch (valoare) {
                case 0:
                    //Statie
                    query = "SELECT Nume, Nume_Regionala \"Nume Regionala\", Adresa, Email, Facilitati, Numar_angajati \"Numar Angajati\" FROM statie";
                    break;
                case 1:
                    //depou
                    query = "SELECT s.Nume \"Nume statie\", s.Nume_Regionala, d.descriere, d.Numar_Angajati, d.Facilitati FROM depou d, statie s where s.id_statie = d.id_statie";
                    break;
                case 2:
                    //angajat
                    query = "SELECT  s.Nume \"Nume Statie\",a.Nume_persoana, a.Prenume_persoana, a.Functie, a.Salariu FROM angajat a, statie s where s.id_statie = a.id_statie";
                    break;
                case 3:
                    //material rulant
                    query = "SELECT s.Nume \"Depou\", m.Numar_parc, m.Tip, m.Status, m.Capacitate, m.Carburant FROM material_rulant m, statie s, depou d where m.id_depou = d.id_depou and d.id_statie = s.id_statie";
                    break;
                case 4:
                    //garnitura
                    query = "SELECT * FROM garnitura";
                    break;
                case 5:
                    //ruta
                    query = "SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume \"Statie sosire\", s2.nume \"Statie plecare\", r.descriere,r.ora_plecare, r.ora_sosire, r.km FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire";
                    break;
                default:
                    break;
            }

            Statement stm = Meniu_Principal.con.createStatement();

            ResultSet res = stm.executeQuery(query);

            jTable1.setModel(buildTableModel(res));

            jLabel1.setVisible(false);
            jLabel2.setVisible(false);
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);

            jComboBox1.setVisible(false);
            jComboBox2.setVisible(false);
            jComboBox3.setVisible(false);
            jComboBox4.setVisible(false);

            jComboBox1.removeAllItems();
            jComboBox2.removeAllItems();
            jComboBox3.removeAllItems();
            jComboBox4.removeAllItems();

            jComboBox1.addItem("");
            jComboBox2.addItem("");
            jComboBox3.addItem("");
            jComboBox4.addItem("");
            if (valoare < 2) {
                jLabel1.setVisible(true);
                jComboBox1.setVisible(true);

                res = stm.executeQuery(query);
                jLabel1.setText("Nume regionala");
                List<String> listRegionala = new ArrayList<>();
                while (res.next()) {
                    if (listRegionala.contains(res.getString(2).trim()) == false) {
                        listRegionala.add(res.getString(2).trim());
                    }
                }
                for (String k : listRegionala) {
                    jComboBox1.addItem(k);
                }
            }
            switch (valoare) {
                //*****************************
                //************* DEPOU *********
                //*****************************
                case 2:
                    jLabel1.setVisible(true);
                    jComboBox1.setVisible(true);
                    res = stm.executeQuery(query);

                    jLabel1.setText("Nume Statie");
                    List<String> listStatie = new ArrayList<>();
                    while (res.next()) {
                        if (listStatie.contains(res.getString(1).trim()) == false) {
                            listStatie.add(res.getString(1).trim());
                        }
                    }
                    for (String k : listStatie) {
                        jComboBox1.addItem(k);
                    }
                    //*************************************************

                    jLabel2.setVisible(true);
                    jComboBox2.setVisible(true);
                    res = stm.executeQuery(query);

                    jLabel2.setText("Nume Familie");
                    List<String> listNume = new ArrayList<>();
                    while (res.next()) {
                        if (listNume.contains(res.getString(2).trim()) == false) {
                            listNume.add(res.getString(2).trim());
                        }
                    }
                    for (String k : listNume) {
                        jComboBox2.addItem(k);
                    }

                    //*************************
                    jLabel3.setVisible(true);
                    jComboBox3.setVisible(true);
                    res = stm.executeQuery(query);
                    jLabel3.setText("Functie");
                    List<String> listFunctie = new ArrayList<>();
                    while (res.next()) {
                        if (listFunctie.contains(res.getString(4).trim()) == false) {
                            listFunctie.add(res.getString(4).trim());
                        }
                    }
                    for (String k : listFunctie) {
                        jComboBox3.addItem(k);
                    }
                    break;

                //*************************************************
                //**********    Mat rulant    *********************
                //*************************************************
                case 3:
                    //nr parc
                    res = stm.executeQuery(query);
                    jLabel1.setVisible(true);
                    jComboBox1.setVisible(true);
                    jLabel1.setText("Carburant");
                    List<String> listCarburant = new ArrayList<>();
                    while (res.next()) {
                        if (res.getString(6) != null && listCarburant.contains(res.getString(6).trim()) == false) {
                            listCarburant.add(res.getString(6).trim());
                        }
                    }
                    for (String k : listCarburant) {
                        jComboBox1.addItem(k);
                    }

                    //tip
                    jLabel2.setVisible(true);
                    jComboBox2.setVisible(true);
                    res = stm.executeQuery(query);
                    jLabel2.setText("Tip");
                    List<String> listTip = new ArrayList<>();
                    while (res.next()) {
                        if (listTip.contains(res.getString(3).trim()) == false) {
                            listTip.add(res.getString(3).trim());
                        }
                    }
                    for (String k : listTip) {
                        jComboBox2.addItem(k);
                    }

                    //status
                    jLabel3.setVisible(true);
                    jComboBox3.setVisible(true);
                    res = stm.executeQuery(query);
                    jLabel3.setText("Status");
                    List<String> listStatus = new ArrayList<>();
                    while (res.next()) {
                        if (listStatus.contains(res.getString(4).trim()) == false) {
                            listStatus.add(res.getString(4).trim());
                        }
                    }
                    for (String k : listStatus) {
                        jComboBox3.addItem(k);
                    }
                    break;

                    
                    
                //*****************************************
                //***********    RUTA    ******************
                //*****************************************
                case 5:
                    //rang
                    jLabel1.setVisible(true);
                    jComboBox1.setVisible(true);

                    res = stm.executeQuery(query);
                    jLabel1.setText("Rang");
                    List<String> listRang = new ArrayList<>();
                    while (res.next()) {
                        if (listRang.contains(res.getString(1).trim()) == false) {
                            listRang.add(res.getString(1).trim());
                        }
                    }
                    for (String k : listRang) {
                        jComboBox1.addItem(k);
                    }

                    //numar
                    jLabel2.setVisible(true);
                    jComboBox2.setVisible(true);

                    res = stm.executeQuery(query);
                    jLabel2.setText("Numar");
                    List<Integer> listNumar = new ArrayList<>();
                    while (res.next()) {
                        if (listNumar.contains(res.getInt(2)) == false) {
                            listNumar.add(res.getInt(2));
                        }
                    }
                    for (Integer k : listNumar) {
                        jComboBox2.addItem(k.toString());
                    }

                    //statie plecare
                    jLabel3.setVisible(true);
                    jComboBox3.setVisible(true);

                    res = stm.executeQuery(query);
                    jLabel3.setText("Statie plecare");
                    List<String> listPlecare = new ArrayList<>();
                    while (res.next()) {
                        if (listPlecare.contains(res.getString(3)) == false) {
                            listPlecare.add(res.getString(3));
                        }
                    }
                    for (String k : listPlecare) {
                        jComboBox3.addItem(k);
                    }

                    //statie sosire
                    jLabel4.setVisible(true);
                    jComboBox4.setVisible(true);

                    res = stm.executeQuery(query);
                    jLabel4.setText("Statie sosire");
                    List<String> listSosire = new ArrayList<>();
                    while (res.next()) {
                        if (listSosire.contains(res.getString(4)) == false) {
                            listSosire.add(res.getString(4));
                        }
                    }
                    for (String k : listSosire) {
                        jComboBox4.addItem(k);
                    }
                    break;
                default:
                    break;
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnSelecteazaActionPerformed

    private void btnFiltreazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltreazaActionPerformed
        int valoare = comboTabela.getSelectedIndex();

        //STATIE SI DEPOU
        if (valoare <= 1) {
            if (jComboBox1.getSelectedItem().toString().equals("") == false) {
                try {
                    PreparedStatement stm;
                    if (valoare == 0) {
                        stm = Meniu_Principal.con.prepareStatement("SELECT Nume, Adresa, Email, Facilitati, Nume_Regionala \"Nume Regionala\", Numar_angajati \"Numar Angajati\" FROM statie where trim(Nume_Regionala) = ?");
                    } else {
                        stm = Meniu_Principal.con.prepareStatement("SELECT s.Nume, s.Nume_Regionala, d.descriere, d.Numar_Angajati, d.Facilitati FROM depou d, statie s where s.id_statie = d.id_statie and trim(s.Nume_Regionala) = ?");
                    }
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                    ResultSet res = stm.executeQuery();
                    jTable1.setModel(buildTableModel(res));
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        } //*************************************************
        //***************  Mat Rul  ***********************
        //*************************************************
        else if (valoare == 3) {
            try {
                PreparedStatement stm;
                if (jComboBox2.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT s.Nume \"Depou\", m.Numar_parc, m.Tip, m.Status, m.Capacitate, m.Carburant FROM material_rulant m, statie s, depou d where m.id_depou = d.id_depou and d.id_statie = s.id_statie and trim(m.Tip) = ?");
                    stm.setString(1, jComboBox2.getSelectedItem().toString());

                } else if (jComboBox3.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT s.Nume \"Depou\", m.Numar_parc, m.Tip, m.Status, m.Capacitate, m.Carburant FROM material_rulant m, statie s, depou d where m.id_depou = d.id_depou and d.id_statie = s.id_statie and trim(m.Status) = ?");
                    stm.setString(1, jComboBox3.getSelectedItem().toString());

                } else if (jComboBox1.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT s.Nume \"Depou\", m.Numar_parc, m.Tip, m.Status, m.Capacitate, m.Carburant FROM material_rulant m, statie s, depou d where m.id_depou = d.id_depou and d.id_statie = s.id_statie and trim(m.Carburant) = ?");
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                } else {
                    stm = Meniu_Principal.con.prepareStatement("SELECT s.Nume \"Depou\", m.Numar_parc, m.Tip, m.Status, m.Capacitate, m.Carburant FROM material_rulant m, statie s, depou d where m.id_depou = d.id_depou and d.id_statie = s.id_statie and trim(m.Carburant) = ?");
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                }
                ResultSet res = stm.executeQuery();
                jTable1.setModel(buildTableModel(res));
            } catch (Exception e) {
                System.out.println(e);
            }
        } //*************************************************
        //******       Angajat      ***********************
        //*************************************************
        else if (valoare == 2) {
            try {
                PreparedStatement stm;
                if (jComboBox2.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT  s.Nume \"Nume Statie\",a.Nume_persoana, a.Prenume_persoana, a.Functie, a.Salariu FROM angajat a, statie s where s.id_statie = a.id_statie and trim(a.Nume_persoana) = ?");
                    stm.setString(1, jComboBox2.getSelectedItem().toString());

                } else if (jComboBox3.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT  s.Nume \"Nume Statie\",a.Nume_persoana, a.Prenume_persoana, a.Functie, a.Salariu FROM angajat a, statie s where s.id_statie = a.id_statie and trim(a.functie) = ?");
                    stm.setString(1, jComboBox3.getSelectedItem().toString());

                } else if (jComboBox1.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT  s.Nume \"Nume Statie\",a.Nume_persoana, a.Prenume_persoana, a.Functie, a.Salariu FROM angajat a, statie s where s.id_statie = a.id_statie and trim(s.Nume) = ?");
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                } else {
                    stm = Meniu_Principal.con.prepareStatement("SELECT  s.Nume \"Nume Statie\",a.Nume_persoana, a.Prenume_persoana, a.Functie, a.Salariu FROM angajat a, statie s where s.id_statie = a.id_statie and trim(s.Nume) = ?");
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                }
                ResultSet res = stm.executeQuery();
                jTable1.setModel(buildTableModel(res));
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        //*****************************************
        //*************   RUTA    *****************
        //*****************************************
        else if (valoare == 5) {
            try {
                PreparedStatement stm;
                if (jComboBox3.isEnabled() == true) {
                    if (jComboBox4.getSelectedItem().equals("") == false) {
                        stm = Meniu_Principal.con.prepareStatement("SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume, s2.nume, r.descriere,r.ora_plecare, r.ora_sosire, r.km FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire and trim(s1.nume) = trim(?) and trim(s2.nume) = trim(?)");
                        stm.setString(1, jComboBox3.getSelectedItem().toString().trim());
                        stm.setString(2, jComboBox4.getSelectedItem().toString().trim());
                        
                    } else {
                        stm = Meniu_Principal.con.prepareStatement("SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume, s2.nume, r.descriere,r.ora_plecare, r.ora_sosire, r.km FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire and trim(s1.nume) = trim(?)");
                        stm.setString(1, jComboBox3.getSelectedItem().toString().trim());
                    }

                } else if (jComboBox2.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume, s2.nume, r.descriere,r.ora_plecare, r.ora_sosire, r.km FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire and trim(r.Numar_tren) = ?");
                    stm.setString(1, jComboBox2.getSelectedItem().toString());

                } else if (jComboBox1.isEnabled() == true) {
                    stm = Meniu_Principal.con.prepareStatement("SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume, s2.nume, r.descriere,r.ora_plecare, r.ora_sosire, r.km FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire and trim(r.rang_tren) = ?");
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                } else {
                    stm = Meniu_Principal.con.prepareStatement("SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume, s2.nume, r.descriere,r.ora_plecare, r.ora_sosire, r.km FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire and trim(r.rang_tren) = ?");
                    stm.setString(1, jComboBox1.getSelectedItem().toString());
                }
                ResultSet res = stm.executeQuery();
                jTable1.setModel(buildTableModel(res));
            } catch (Exception e) {
                System.out.println(e);
            }
        }

    }//GEN-LAST:event_btnFiltreazaActionPerformed

    //*************************
    //Combobox action performed
    //*************************

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        int valoare = comboTabela.getSelectedIndex();
        if (valoare == 2 || valoare == 3) {
            if (jComboBox2.getSelectedItem() != null && jComboBox2.getSelectedItem().equals("") == false) {
                jComboBox1.setEnabled(false);
                jComboBox3.setEnabled(false);
                jComboBox2.setEnabled(true);
                jComboBox4.setEnabled(false);
            } else {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
                jComboBox4.setEnabled(true);
            }
        } else if (valoare == 5) {
            if (jComboBox2.getSelectedItem() != null && jComboBox2.getSelectedItem().equals("") == false) {
                jComboBox2.setEnabled(true);
                jComboBox1.setEnabled(false);
                jComboBox3.setEnabled(false);
                jComboBox4.setEnabled(false);
            } else {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
                jComboBox4.setEnabled(true);
            }
        }
     }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        int valoare = comboTabela.getSelectedIndex();
        if (valoare == 2 || valoare == 3) {
            if (jComboBox3.getSelectedItem() != null && jComboBox3.getSelectedItem().equals("") == false) {
                jComboBox1.setEnabled(false);
                jComboBox2.setEnabled(false);
                jComboBox3.setEnabled(true);
            } else {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
            }
        } else if (valoare == 5) {
            if (jComboBox3.getSelectedItem() != null && jComboBox3.getSelectedItem().equals("") == false) {
                jComboBox3.setEnabled(true);
                jComboBox2.setEnabled(false);
                jComboBox1.setEnabled(false);
                jComboBox4.setEnabled(true);
            } else {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
                jComboBox4.setEnabled(true);
            }
        }

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed

    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int valoare = comboTabela.getSelectedIndex();
        if (valoare == 2 || valoare == 3) {
            if (jComboBox1.getSelectedItem() != null && jComboBox1.getSelectedItem().equals("") == false) {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(false);
                jComboBox3.setEnabled(false);
            } else {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
            }
        } else if (valoare == 5) {
            if (jComboBox1.getSelectedItem() != null && jComboBox1.getSelectedItem().equals("") == false) {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(false);
                jComboBox3.setEnabled(false);
                jComboBox4.setEnabled(false);
            } else {
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
                jComboBox4.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void comboTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTabelaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTabelaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new Meniu_Principal().show();
        this.hide();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Meniu_Vizualizare().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltreaza;
    private javax.swing.JButton btnSelecteaza;
    private javax.swing.JComboBox<String> comboTabela;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelTabela;
    // End of variables declaration//GEN-END:variables
}
