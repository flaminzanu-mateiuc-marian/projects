/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.io.*;
import java.sql.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marian
 */
public class Meniu_Modificare_1 extends javax.swing.JFrame {

    public Vector<JTextField> VectorTextBox = new Vector<>(8);
    public Savepoint spt1;

    public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }

    /**
     * Creates new form Meniu_Vizualizare
     */
    public Meniu_Modificare_1() {
        initComponents();
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        try {
            spt1 = Meniu_Principal.con.setSavepoint("svpt1");
            System.out.println("savepoint");
        } catch (Exception e) {

        }
        VectorTextBox.addElement(jTextField1);
        VectorTextBox.addElement(jTextField2);
        VectorTextBox.addElement(jTextField3);
        VectorTextBox.addElement(jTextField4);
        VectorTextBox.addElement(jTextField5);
        VectorTextBox.addElement(jTextField6);
        VectorTextBox.addElement(jTextField7);
        VectorTextBox.addElement(jTextField8);
        for (int i = 0; i < 8; i++) {
            VectorTextBox.elementAt(i).setEnabled(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        labelTabela = new javax.swing.JLabel();
        comboTabela = new javax.swing.JComboBox<>();
        btnSelecteaza = new javax.swing.JButton();
        btnModifica = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        btnRollback = new javax.swing.JButton();
        btnSalvare = new javax.swing.JButton();
        btnSterge = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        labelTabela.setText("Selectati tabela:");

        comboTabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Statie", "Depou", "Angajat", "Material Rulant", "Garnitura", "Ruta" }));
        comboTabela.setSelectedItem(comboTabela);
        comboTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTabelaActionPerformed(evt);
            }
        });

        btnSelecteaza.setText("Selecteaza");
        btnSelecteaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecteazaActionPerformed(evt);
            }
        });

        btnModifica.setText("Modifica");
        btnModifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificaActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        btnRollback.setBackground(new java.awt.Color(255, 51, 51));
        btnRollback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRollback.setForeground(new java.awt.Color(255, 255, 255));
        btnRollback.setText("Rollback");
        btnRollback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRollbackActionPerformed(evt);
            }
        });

        btnSalvare.setBackground(new java.awt.Color(153, 255, 153));
        btnSalvare.setText("Salvare");
        btnSalvare.setDefaultCapable(false);
        btnSalvare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvareActionPerformed(evt);
            }
        });

        btnSterge.setText("Sterge");
        btnSterge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStergeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(labelTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnModifica, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSterge, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(comboTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(btnSelecteaza, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalvare, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRollback, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(labelTabela)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecteaza, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRollback, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvare, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifica, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSterge, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecteazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecteazaActionPerformed

        for (int i = 0; i < 8; i++) {
            VectorTextBox.elementAt(i).setText("");
        }
        try {

            String query = "";
            int i = 0;
            int valoare = comboTabela.getSelectedIndex();
            switch (valoare) {
                case 0:
                    //Statie
                    query = "SELECT Nume, Nume_Regionala \"Nume Regionala\", Adresa, Email, Facilitati, Numar_angajati \"Numar Angajati\",id_statie FROM statie";
                    for (i = 0; i < 6; i++) {
                        VectorTextBox.elementAt(i).setEnabled(true);
                    }
                    for (i = 6; i < 8; i++) {
                        VectorTextBox.elementAt(i).setEnabled(false);
                    }
                    break;
                case 1:
                    //depou
                    query = "SELECT s.Nume \"Nume statie\", s.Nume_Regionala, d.descriere, d.Numar_Angajati, d.Facilitati, d.id_depou FROM depou d, statie s where s.id_statie = d.id_statie";
                    VectorTextBox.elementAt(i).setEnabled(true);
                    VectorTextBox.elementAt(0).setEnabled(false);
                    VectorTextBox.elementAt(1).setEnabled(false);
                    for (i = 2; i < 5; i++) {
                        VectorTextBox.elementAt(i).setEnabled(true);
                    }
                    for (i = 5; i < 8; i++) {
                        VectorTextBox.elementAt(i).setEnabled(false);
                    }
                    break;
                case 2:
                    //angajat
                    query = "SELECT  s.Nume \"Nume Statie\",a.Nume_persoana, a.Prenume_persoana, a.Functie, a.Salariu, a.id_persoana FROM angajat a, statie s where s.id_statie = a.id_statie";
                    for (i = 0; i < 5; i++) {
                        VectorTextBox.elementAt(i).setEnabled(true);
                    }
                    for (i = 5; i < 8; i++) {
                        VectorTextBox.elementAt(i).setEnabled(false);
                    }
                    break;
                case 3:
                    //material rulant
                    query = "SELECT s.Nume \"Depou\", m.Numar_parc, m.Tip, m.Status, m.Capacitate, m.Carburant,m.id_material FROM material_rulant m, statie s, depou d where m.id_depou = d.id_depou and d.id_statie = s.id_statie";
                    for (i = 0; i < 6; i++) {
                        VectorTextBox.elementAt(i).setEnabled(true);
                    }
                    for (i = 6; i < 8; i++) {
                        VectorTextBox.elementAt(i).setEnabled(false);
                    }
                    break;
                case 4:
                    //garnitura
                    query = "SELECT Numar_Garnitura, Id_loc1, Id_vag1,Id_vag2,Id_vag3,Id_vag4,Id_vag5,Id_garnitura FROM garnitura";
                    for (i = 0; i < 7; i++) {
                        VectorTextBox.elementAt(i).setEnabled(true);
                    }
                    VectorTextBox.elementAt(7).setEnabled(false);
                    break;
                case 5:
                    //ruta
                    query = "SELECT r.rang_tren \"Rang\", r.Numar_tren \"Numar\", s1.nume \"Statie plecare\", s2.nume \"Statie sosire\", r.descriere,r.ora_plecare, r.ora_sosire, r.km, r.id_ruta FROM ruta r, statie s1, statie s2 where s1.id_statie = r.id_statie_plecare and s2.id_statie = r.id_statie_sosire";
                    for (i = 0; i < 8; i++) {
                        VectorTextBox.elementAt(i).setEnabled(true);
                    }
                    break;
                default:
                    break;
            }

            Statement stm = Meniu_Principal.con.createStatement();

            ResultSet res = stm.executeQuery(query);

            jTable1.setModel(buildTableModel(res));

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnSelecteazaActionPerformed

    private void btnModificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificaActionPerformed
        int valoare = comboTabela.getSelectedIndex();
        int ok;
        switch (valoare) {
            //STATIE
            case 0:
                //Statie
                ok = 1;
                for (int i = 0; i < 6; i++) {
                    if (VectorTextBox.elementAt(i).getText().equals("")) {
                        ok = 0;
                        break;
                    }
                }
                if (ok == 1) {
                    try {

                        PreparedStatement stm;

                        stm = Meniu_Principal.con.prepareStatement("update statie set Nume = ?, Nume_Regionala = ?, Adresa = ?, Email=?, Facilitati=?, Numar_angajati = ? where id_statie = ?");
                        // stm.setString(1, .getSelectedItem().toString());
                        for (int j = 0; j < 6; j++) {
                            stm.setString(j + 1, VectorTextBox.elementAt(j).getText().trim());
                        }
                        stm.setInt(7, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString()));
                        stm.executeUpdate();
                        btnSelecteazaActionPerformed(evt);

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                break;

            //*****************************************
            //********* DEPOU *******************
            case 1:
                //Statie
                ok = 1;
                for (int i = 0; i < 4; i++) {
                    if (VectorTextBox.elementAt(i).getText().equals("")) {
                        ok = 0;
                        break;
                    }
                }
                if (ok == 1) {
                    try {
                        PreparedStatement stm;

                        stm = Meniu_Principal.con.prepareStatement("update depou set descriere = ?, Numar_angajati = ?, Facilitati = ? where id_depou = ?");
                        stm.setString(1, VectorTextBox.elementAt(2).getText().trim());
                        stm.setInt(2, Integer.parseInt(VectorTextBox.elementAt(3).getText().trim()));
                        stm.setString(3, VectorTextBox.elementAt(4).getText().trim());

                        stm.setInt(4, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString()));
                        stm.executeUpdate();
                        btnSelecteazaActionPerformed(evt);

                    } catch (Exception e) {
                        System.out.println(e);
                        JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);

                    }
                }
                break;

            //*****************************************
            //********* Angajat *******************
            case 2:
                //Statie
                ok = 1;
                for (int i = 0; i < 5; i++) {
                    if (VectorTextBox.elementAt(i).getText().equals("")) {
                        ok = 0;
                        break;
                    }
                }
                if (ok == 1) {
                    try {

                        PreparedStatement stm;
                        stm = Meniu_Principal.con.prepareStatement("update angajat set id_statie = (select s.id_statie from statie s where lower(trim(s.nume)) = ?), Nume_persoana = ?, Prenume_persoana = ?, Functie = ?, Salariu = ? where id_persoana = ?");
                        stm.setString(1, VectorTextBox.elementAt(0).getText().trim().toLowerCase());

                        for (int j = 1; j < 5; j++) {
                            stm.setString(j + 1, VectorTextBox.elementAt(j).getText().trim());
                        }
                        stm.setInt(6, Integer.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString()));
                        stm.executeUpdate();
                        btnSelecteazaActionPerformed(evt);

                    } catch (Exception e) {
                        System.out.println(e);
                        if (e.toString().trim().equals("java.sql.SQLException: ORA-01407: nu poate fi actualizat (\"BD037\".\"ANGAJAT\".\"ID_STATIE\") cu NULL")) {
                            JOptionPane.showMessageDialog(null, "Numele statiei este invalid", "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        }

                    }
                }
                break;

            //*****************************************
            //********* Material rulant *******************
            case 3:

                ok = 1;
                for (int i = 0; i < 4; i++) {
                    if (VectorTextBox.elementAt(i).getText().equals("")) {
                        ok = 0;
                        break;
                    }
                }
                if (ok == 1) {
                    try {
                        PreparedStatement stm;
                        stm = Meniu_Principal.con.prepareStatement("update material_rulant set id_depou = (select d.id_depou from depou d, statie s where s.id_statie = d.id_statie and lower(trim(s.nume)) = ?), Numar_parc = ?, Tip = ?, Status = ?, Capacitate = ?, Carburant = ? where id_material = ?");

                        stm.setString(1, VectorTextBox.elementAt(0).getText().trim().toLowerCase());
                        stm.setInt(2, Integer.valueOf(VectorTextBox.elementAt(1).getText().trim()));
                        stm.setString(3, VectorTextBox.elementAt(2).getText().trim().toLowerCase());
                        stm.setString(4, VectorTextBox.elementAt(3).getText().trim().toLowerCase());
                        if (VectorTextBox.elementAt(4).getText().trim().equals("")) {
                            stm.setNull(5, java.sql.Types.NULL);
                        } else {
                            stm.setInt(5, Integer.valueOf(VectorTextBox.elementAt(4).getText().trim()));
                        }
                        if (VectorTextBox.elementAt(5).getText().trim().equals("")) {
                            stm.setNull(6, java.sql.Types.NULL);
                        } else {
                            stm.setString(6, VectorTextBox.elementAt(5).getText().trim().toLowerCase());
                        }
                        stm.setInt(7, Integer.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString()));
                        stm.executeUpdate();
                        btnSelecteazaActionPerformed(evt);

                    } catch (Exception e) {
                        System.out.println(e);
                        if (e.toString().trim().equals("java.sql.SQLException: ORA-01407: nu poate fi actualizat (\"BD037\".\"ANGAJAT\".\"ID_STATIE\") cu NULL")) {
                            JOptionPane.showMessageDialog(null, "Numele statiei este invalid", "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        }

                    }
                }
                break;
            //*****************************************
            //********* Garnitura *******************
            case 4:

                ok = 1;
                for (int i = 0; i < 3; i++) {
                    if (VectorTextBox.elementAt(i).getText().equals("")) {
                        ok = 0;
                        break;
                    }
                }
                if (ok == 1) {
                    try {
                        PreparedStatement stm;
                        stm = Meniu_Principal.con.prepareStatement("update garnitura set Numar_garnitura = ?, Id_loc1 = ?, Id_vag1 = ?,Id_vag2 = ?,Id_vag3 = ?,Id_vag4 = ?,Id_vag5 = ? where id_garnitura = ?");

                        stm.setInt(1, Integer.valueOf(VectorTextBox.elementAt(0).getText().trim()));
                        stm.setInt(2, Integer.valueOf(VectorTextBox.elementAt(1).getText().trim()));
                        stm.setInt(3, Integer.valueOf(VectorTextBox.elementAt(2).getText().trim()));
                        if (VectorTextBox.elementAt(3).getText().trim().equals("")) {
                            stm.setNull(4, java.sql.Types.NULL);
                        } else {
                            stm.setInt(4, Integer.valueOf(VectorTextBox.elementAt(3).getText().trim()));
                        }
                        if (VectorTextBox.elementAt(4).getText().trim().equals("")) {
                            stm.setNull(5, java.sql.Types.NULL);
                        } else {
                            stm.setInt(5, Integer.valueOf(VectorTextBox.elementAt(4).getText().trim()));
                        }
                        if (VectorTextBox.elementAt(5).getText().trim().equals("")) {
                            stm.setNull(6, java.sql.Types.NULL);
                        } else {
                            stm.setInt(6, Integer.valueOf(VectorTextBox.elementAt(5).getText().trim()));
                        }
                        if (VectorTextBox.elementAt(6).getText().trim().equals("")) {
                            stm.setNull(7, java.sql.Types.NULL);
                        } else {
                            stm.setInt(7, Integer.valueOf(VectorTextBox.elementAt(6).getText().trim()));
                        }

                        stm.setInt(8, Integer.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString()));
                        stm.executeUpdate();
                        btnSelecteazaActionPerformed(evt);

                    } catch (Exception e) {
                        System.out.println(e);
                        if (e.toString().trim().equals("java.sql.SQLException: ORA-01407: nu poate fi actualizat (\"BD037\".\"ANGAJAT\".\"ID_STATIE\") cu NULL")) {
                            JOptionPane.showMessageDialog(null, "Numele statiei este invalid", "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        }

                    }
                }
                break;
            //*****************************************
            //********* RUTA *******************
            case 5:
                ok = 1;
                for (int i = 0; i < 7; i++) {
                    if (VectorTextBox.elementAt(i).getText().equals("")) {
                        ok = 0;
                        break;
                    }
                }
                if (ok == 1) {
                    try {
                        PreparedStatement stm;
                        stm = Meniu_Principal.con.prepareStatement("update ruta set rang_tren = ?, Numar_tren = ?, id_statie_plecare = (select id_statie from statie where lower(trim(nume)) = lower(trim(?))), id_statie_sosire = (select id_statie from statie where lower(trim(nume)) = lower(trim(?))), descriere = ?, ora_plecare = ?, ora_sosire = ?, km = ? where id_ruta = ?");
                        stm.setString(1, VectorTextBox.elementAt(0).getText().trim());
                        stm.setInt(2, Integer.parseInt(VectorTextBox.elementAt(1).getText().trim()));
                        stm.setString(3, VectorTextBox.elementAt(2).getText().trim());
                        stm.setString(4, VectorTextBox.elementAt(3).getText().trim());

                        stm.setString(5, VectorTextBox.elementAt(4).getText().trim());
                        stm.setString(6, VectorTextBox.elementAt(5).getText().trim());
                        stm.setString(7, VectorTextBox.elementAt(6).getText().trim());

                        stm.setInt(8, Integer.parseInt(VectorTextBox.elementAt(7).getText().trim()));

                        stm.setInt(9, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()));
                        stm.executeUpdate();
                        btnSelecteazaActionPerformed(evt);

                    } catch (Exception e) {
                        System.out.println(e);
                        if (e.toString().trim().equals("java.sql.SQLException: ORA-01407: nu poate fi actualizat (\"BD037\".\"ANGAJAT\".\"ID_STATIE\") cu NULL")) {
                            JOptionPane.showMessageDialog(null, "Numele statiei este invalid", "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
                break;
            default:
                break;

        }
    }//GEN-LAST:event_btnModificaActionPerformed

    private void comboTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTabelaActionPerformed
        try {
            spt1 = Meniu_Principal.con.setSavepoint("svpt1");
            System.out.println("savepoint");
        } catch (Exception e) {

        }
    }//GEN-LAST:event_comboTabelaActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int valoare = comboTabela.getSelectedIndex();
        int i;
        switch (valoare) {
            case 0:
                //Statie
                for (i = 0; i < 6; i++) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), i) != null) {
                        VectorTextBox.elementAt(i).setText(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString().trim());
                    } else {
                        VectorTextBox.elementAt(i).setText("");
                    }

                }
                break;
            case 1:
                //depou
                for (i = 0; i < 5; i++) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), i) != null) {
                        VectorTextBox.elementAt(i).setText(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString().trim());
                    } else {
                        VectorTextBox.elementAt(i).setText("");
                    }
                }
                break;
            case 2:
                //angajat
                for (i = 0; i < 5; i++) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), i) != null) {
                        VectorTextBox.elementAt(i).setText(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString().trim());
                    } else {
                        VectorTextBox.elementAt(i).setText("");
                    }
                }
                break;
            case 3:
                //material rulant
                for (i = 0; i < 6; i++) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), i) != null) {
                        VectorTextBox.elementAt(i).setText(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString().trim());
                    } else {
                        VectorTextBox.elementAt(i).setText("");
                    }
                }
                break;
            case 4:
                //garnitura
                for (i = 0; i < 8; i++) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), i) != null) {
                        VectorTextBox.elementAt(i).setText(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString().trim());
                    } else {
                        VectorTextBox.elementAt(i).setText("");
                    }
                }
                break;
            case 5:
                //ruta
                for (i = 0; i < 8; i++) {
                    if (jTable1.getValueAt(jTable1.getSelectedRow(), i) != null) {
                        VectorTextBox.elementAt(i).setText(jTable1.getValueAt(jTable1.getSelectedRow(), i).toString().trim());
                    } else {
                        VectorTextBox.elementAt(i).setText("");
                    }
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnRollbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRollbackActionPerformed
        try {
            Meniu_Principal.con.rollback(spt1);
            Meniu_Principal.con.commit();
            System.out.println("rollback");
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnRollbackActionPerformed

    private void btnSalvareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvareActionPerformed
        try {
            Meniu_Principal.con.commit();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnSalvareActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new Meniu_Principal().show();
        this.hide();
    }//GEN-LAST:event_formWindowClosing

    private void btnStergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStergeActionPerformed

        int valoare = comboTabela.getSelectedIndex();
        switch (valoare) {
            case 0: {
                try {
                    PreparedStatement stm;
                    stm = Meniu_Principal.con.prepareStatement("delete from statie where id_statie = ?");
                    stm.setInt(1, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString()));
                    stm.execute();
                    btnSelecteazaActionPerformed(evt);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                }

                break;
            }
            //*****************************************
            //********* DEPOU *******************
            case 1: {
                try {
                    PreparedStatement stm;
                    stm = Meniu_Principal.con.prepareStatement("delete from depou where id_depou = ?");
                    stm.setInt(1, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString()));
                    stm.execute();
                    btnSelecteazaActionPerformed(evt);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                }

                break;
            }
            //*****************************************
            //********* Angajat *******************
            case 2: {
                try {
                    PreparedStatement stm;
                    stm = Meniu_Principal.con.prepareStatement("delete from angajat where id_persoana = ?");
                    stm.setInt(1, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString()));
                    stm.execute();
                    btnSelecteazaActionPerformed(evt);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                }

                break;
            }
            //*****************************************
            //********* Material rulant *******************
            case 3: {
                try {
                    PreparedStatement stm;
                    stm = Meniu_Principal.con.prepareStatement("delete from material_rulant where id_material = ?");
                    stm.setInt(1, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString()));
                    stm.execute();
                    btnSelecteazaActionPerformed(evt);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                }

                break;
            }
            //*****************************************
            //********* Garnitura *******************
            case 4: {
                try {
                    PreparedStatement stm;
                    stm = Meniu_Principal.con.prepareStatement("delete from garnitura where id_garnitura = ?");
                    stm.setInt(1, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString()));
                    stm.execute();
                    btnSelecteazaActionPerformed(evt);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                }

                break;
            }
            //*****************************************
            //********* RUTA *******************
            case 5: {
                try {
                    PreparedStatement stm;
                    stm = Meniu_Principal.con.prepareStatement("delete from ruta where id_ruta = ?");
                    stm.setInt(1, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()));
                    stm.execute();
                    btnSelecteazaActionPerformed(evt);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.INFORMATION_MESSAGE);
                }

                break;
            }
            default:
                break;

        }

    }//GEN-LAST:event_btnStergeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Meniu_Vizualizare.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Meniu_Vizualizare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModifica;
    private javax.swing.JButton btnRollback;
    private javax.swing.JButton btnSalvare;
    private javax.swing.JButton btnSelecteaza;
    private javax.swing.JButton btnSterge;
    private javax.swing.JComboBox<String> comboTabela;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel labelTabela;
    // End of variables declaration//GEN-END:variables
}
